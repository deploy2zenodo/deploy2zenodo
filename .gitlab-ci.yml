variables:
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/deploy2zenodo-ci-template/$TAG"
  BASE_FILE_NAME: deploy2zenodo
  CI_FILE_URL: "$PACKAGE_REGISTRY_URL/$BASE_FILE_NAME-$TAG.yaml"
  CI_FILE_NAME: $BASE_FILE_NAME.yaml
  FILE_URL: "$PACKAGE_REGISTRY_URL/$BASE_FILE_NAME-$TAG"
  FILE_NAME: $BASE_FILE_NAME

.display_env:
  before_script:
    - date
    - cat /etc/os-release

pre-commit:
  stage: build
  image:
    name: alpine:latest
  extends: .display_env
  script:
    - apk add --no-cache bash gcc git libc-dev npm py3-pip python3-dev
    - pip3 install pre-commit
    - pre-commit --version
    - pre-commit run --all-files
    - ./create_deploy2zenodo_gitlab_ci_pipeline
    - cat $CI_FILE_NAME
    - ./create_deploy2zenodo_script
    - cat $FILE_NAME.sh
    - pre-commit run --all-files
  artifacts:
    expire_in: 1 hrs
    paths:
      - $CI_FILE_NAME
      - $FILE_NAME.sh

prepare_release:
  stage: build
  image:
    # https://hub.docker.com/_/alpine
    name: alpine:latest
  extends: .display_env
  script:
    - echo "DESCRIPTION=README.md" > variables.env
    - TAG=$(sed -n 's/^.*Version:\s*\(\S*\)$/\1/p' $BASE_FILE_NAME)
    - echo "TAG=$TAG" >> variables.env
    - cat variables.env
  artifacts:
    expire_in: 1 hrs
    reports:
      dotenv: variables.env

deploy_ci_template:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - job: pre-commit
      artifacts: true
    - job: prepare_release
      artifacts: true
  image:
    # https://hub.docker.com/_/alpine
    name: alpine:latest
  extends: .display_env
  script:
    - apk add --no-cache curl
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file $CI_FILE_NAME $CI_FILE_URL
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file $FILE_NAME.sh $FILE_URL

release_job:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - job: pre-commit
      artifacts: true
    - job: prepare_release
      artifacts: true
    - job: deploy_ci_template
  image:
    # https://docs.gitlab.com/ee/user/project/releases/release_cicd_examples.html#create-release-metadata-in-a-custom-script
    registry.gitlab.com/gitlab-org/release-cli:latest
  extends: .display_env
  script:
    - echo "running release_job for $TAG"
  release:
    name: '$BASE_FILE_NAME v$TAG'
    description: '$DESCRIPTION'
    tag_name: '$TAG'
    ref: '$CI_COMMIT_SHA'
    assets:
      links:
        - name: $CI_FILE_NAME
          filepath: /$CI_FILE_NAME
          url: $CI_FILE_URL
          link_type: other
        - name: $FILE_NAME
          filepath: /$FILE_NAME
          url: $FILE_URL
          link_type: other

trigger:
  stage: .post
  image:
    name: alpine:latest
  variables:
    trigger_token: $trigger_token
  script:
    - apk add --no-cache curl
    - curl -X POST --fail -F token="${trigger_token:?}" -F ref=main https://gitlab.dlr.de/api/v4/projects/26204/trigger/pipeline
